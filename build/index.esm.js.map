{"version":3,"file":"index.esm.js","sources":["../src/jsnview.js"],"sourcesContent":["function isObj (o) {\r\n  return o !== null && o.constructor.name === \"Object\"\r\n}\r\n\r\nfunction getValType (value) {\r\n  let isFloat = Number(value) === value && value % 1 !== 0;\r\n  return isFloat ? 'float' : ({}).toString.call(value).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\r\n}\r\n\r\nfunction createSpan (txt, className) {\r\n  let span = document.createElement('span');\r\n  span.textContent = txt;\r\n  span.classList.add(className);\r\n  return span;\r\n}\r\n\r\nexport default function jsnview (data, { displayItemsLen = true, displayTypes = true } = {}) {\r\n  let options = { displayItemsLen, displayTypes };\r\n  let rootElement = document.createElement('ul');\r\n  rootElement.classList.add('jsv', 'p-0', 'm-0');\r\n\r\n  if (Array.isArray(data)) {\r\n    const ul = document.createElement('ul');\r\n    data.forEach(obj => {\r\n      render(ul, obj, null);\r\n    });\r\n\r\n    let li = document.createElement('li');\r\n    li.prepend(createSpanFold('[', null, null, ul.children.length));\r\n    li.appendChild(ul);\r\n    li.appendChild(createSpanFold(null, ']', null));\r\n    rootElement.appendChild(li)\r\n  }\r\n  else {\r\n    render(rootElement, data, null);\r\n  }\r\n\r\n  function createSpanFold (startDelimiter, endDelimiter, key, itemsLen = 0) {\r\n    let span = document.createElement('span');\r\n\r\n    if (startDelimiter) {\r\n      span.classList.add('jsv-fold');\r\n      span.textContent = (key ? `\"${key}\": ` : '') + startDelimiter;\r\n\r\n      if (options.displayItemsLen) {\r\n        let spanItemsLen = createSpan(`${itemsLen} items`, 'jsv-items-len');\r\n        span.appendChild(spanItemsLen);\r\n      }\r\n    }\r\n    else {\r\n      span.classList.add('jsv-fold-end');\r\n      span.innerHTML = endDelimiter;\r\n    }\r\n\r\n    return span;\r\n  }\r\n\r\n  function createArr (rootElement, arr, key) {\r\n    const ul = document.createElement('ul');\r\n\r\n    arr.forEach(value => {\r\n      createListItems(ul, value, null);\r\n    });\r\n\r\n    const li = document.createElement('li');\r\n    li.appendChild(createSpanFold('[', null, key, ul.children.length));\r\n    li.appendChild(ul);\r\n    li.appendChild(createSpanFold(null, ']', key));\r\n    rootElement.appendChild(li)\r\n  }\r\n\r\n  function createListItems (parentElement, value, key) {\r\n\r\n    if (Array.isArray(value)) {\r\n      createArr(parentElement, value, null);\r\n    }\r\n    if (isObj(value)) {\r\n      render(parentElement, value, null);\r\n    }\r\n    if (!isObj(value) && !Array.isArray(value)) {\r\n      let typeValue = getValType(value);\r\n\r\n      let spanValue = createSpan(\r\n        typeValue === 'string' ? `\"${value}\"` : value,\r\n        `txt-${typeValue}`\r\n      );\r\n\r\n      if (options.displayTypes) {\r\n        let spanValueType = createSpan(options.displayTypes ? ` (${typeValue})` : '', 'txt-span-vtype');\r\n        spanValue.appendChild(spanValueType);\r\n      }\r\n\r\n      let li = document.createElement('li');\r\n      li.textContent = key ? `\"${key}\": ` : '';\r\n      li.appendChild(spanValue);\r\n\r\n      parentElement.appendChild(li);\r\n    }\r\n  }\r\n\r\n  function render (rootElement, obj, parentKey) {\r\n\r\n    const ul = document.createElement('ul');\r\n\r\n    for (let [key, value] of Object.entries(obj)) {\r\n      if (!isObj(value) && !Array.isArray(value)) {\r\n        createListItems(ul, value, key)\r\n      }\r\n\r\n      if (Array.isArray(value)) {\r\n        createArr(ul, value, key, false);\r\n      }\r\n\r\n      if (isObj(value)) {\r\n        render(ul, value, key);\r\n      }\r\n    }\r\n\r\n    const li = document.createElement('li');\r\n    li.appendChild(createSpanFold('{', null, parentKey, ul.children.length));\r\n    li.appendChild(ul);\r\n    li.appendChild(createSpanFold(null, '}', null));\r\n    rootElement.appendChild(li);\r\n  }\r\n\r\n  rootElement.addEventListener('click', (e) => {\r\n\r\n    let target = e.target, parentTarget = target.parentNode;\r\n\r\n    if (parentTarget.nodeName === 'LI' && target.classList.contains('jsv-fold')) {\r\n\r\n      let isClosed = target.classList.contains('jsv-fold-close');\r\n\r\n      for (let element of parentTarget.children) {\r\n        if (!element.classList.contains('jsv-fold') && !element.classList.contains('jsv-fold-end')) {\r\n          element.style.display = isClosed ? 'block' : 'none';\r\n        }\r\n      }\r\n\r\n      target.classList.toggle('jsv-fold-close');\r\n    }\r\n  }, false);\r\n\r\n  return rootElement;\r\n}\r\n"],"names":["isObj","o","constructor","name","createSpan","txt","className","span","document","createElement","textContent","classList","add","jsnview","data","displayItemsLen","displayTypes","options","rootElement","Array","isArray","ul","forEach","obj","render","li","prepend","createSpanFold","children","length","appendChild","startDelimiter","endDelimiter","key","itemsLen","spanItemsLen","innerHTML","createArr","arr","value","createListItems","parentElement","typeValue","Number","toString","call","match","toLowerCase","getValType","spanValue","spanValueType","parentKey","Object","entries","addEventListener","e","target","parentTarget","parentNode","nodeName","contains","isClosed","element","style","display","toggle"],"mappings":"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"}