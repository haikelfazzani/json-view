{"version":3,"file":"index.esm.js","sources":["../src/jsnview.js"],"sourcesContent":["function isObj (o) {\r\n  return o && typeof o === 'object' && o.constructor.name === \"Object\"\r\n}\r\n\r\nfunction getValType (value) {\r\n  let isFloat = Number(value) === value && value % 1 !== 0;\r\n  return isFloat ? 'float' : ({}).toString.call(value).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\r\n}\r\n\r\nfunction createSpan (txt, className) {\r\n  let span = document.createElement('span');\r\n  span.textContent = txt;\r\n  span.classList.add(className);\r\n  return span;\r\n}\r\n\r\nexport default function jsnview (data, { displayItemsLen = true, displayTypes = true } = {}) {\r\n  let options = { displayItemsLen, displayTypes };\r\n  let rootElement = document.createElement('ul');\r\n  rootElement.classList.add('jsv', 'p-0', 'm-0');\r\n\r\n  if (Array.isArray(data)) {\r\n    let ul = document.createElement('ul');\r\n    data.forEach(obj => {\r\n      render(ul, obj, null);\r\n    });\r\n\r\n    let li = document.createElement('li');\r\n    li.prepend(createSpanFold('[', null, null, ul.children.length));\r\n    li.appendChild(ul);\r\n    li.appendChild(createSpanFold(null, ']', null));\r\n    rootElement.appendChild(li)\r\n  } else {\r\n    render(rootElement, data, null);\r\n  }\r\n\r\n  function createSpanFold (startDelimiter, endDelimiter, key, itemsLen = 0) {\r\n    let span = document.createElement('span');\r\n\r\n    if (startDelimiter) {\r\n      span.classList.add('jsv-fold');\r\n      span.textContent = (key ? `\"${key}\": ` : '') + startDelimiter;\r\n\r\n      if (options.displayItemsLen) {\r\n        let spanItemsLen = createSpan(`${itemsLen} items`, 'jsv-items-len');\r\n        span.appendChild(spanItemsLen);\r\n      }\r\n    }\r\n    else {\r\n      span.classList.add('jsv-fold-end');\r\n      span.innerHTML = endDelimiter;\r\n    }\r\n\r\n    return span;\r\n  }\r\n\r\n  function createArr (rootElement, arr, key) {\r\n    const ul = document.createElement('ul');\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n      const value = arr[i];\r\n      createListItems(ul, value, null);\r\n    }\r\n\r\n    const li = document.createElement('li');\r\n    li.appendChild(createSpanFold('[', null, key, ul.children.length));\r\n    li.appendChild(ul);\r\n    li.appendChild(createSpanFold(null, ']', key));\r\n    rootElement.appendChild(li)\r\n  }\r\n\r\n  function createListItems (parentElement, value, key) {\r\n\r\n    if (Array.isArray(value)) {\r\n      createArr(parentElement, value, null);\r\n    }\r\n    if (isObj(value)) {\r\n      render(parentElement, value, null);\r\n    }\r\n    if (!isObj(value) && !Array.isArray(value)) {\r\n      let typeValue = getValType(value);\r\n\r\n      value = typeof value === 'boolean' ? value : (value || typeValue);\r\n      let spanValue = createSpan(\r\n        typeValue === 'string' ? `\"${value}\"` : value,\r\n        `txt-${typeValue}`\r\n      );\r\n\r\n      if (options.displayTypes) {\r\n        let spanValueType = createSpan(options.displayTypes ? ` (${typeValue})` : '', 'txt-span-vtype');\r\n        spanValue.appendChild(spanValueType);\r\n      }\r\n\r\n      let li = document.createElement('li');\r\n      li.textContent = key ? `\"${key}\": ` : '';\r\n      li.appendChild(spanValue);\r\n\r\n      parentElement.appendChild(li);\r\n    }\r\n  }\r\n\r\n  function render (rootElement, obj, parentKey) {\r\n\r\n    const ul = document.createElement('ul');\r\n\r\n    for (let [key, value] of Object.entries(obj)) {\r\n      if (!isObj(value) && !Array.isArray(value)) {\r\n        createListItems(ul, value, key)\r\n      }\r\n\r\n      if (Array.isArray(value)) {\r\n        createArr(ul, value, key, false);\r\n      }\r\n\r\n      if (isObj(value)) {\r\n        render(ul, value, key);\r\n      }\r\n    }\r\n\r\n    const li = document.createElement('li');\r\n    li.appendChild(createSpanFold('{', null, parentKey, ul.children.length));\r\n    li.appendChild(ul);\r\n    li.appendChild(createSpanFold(null, '}', null));\r\n    rootElement.appendChild(li);\r\n  }\r\n\r\n  function onToggleFold (e) {\r\n    let target = e.target, parentTarget = target.parentNode;\r\n\r\n    if (parentTarget.nodeName === 'LI' && target.classList.contains('jsv-fold')) {\r\n\r\n      let isClosed = target.classList.contains('jsv-fold-close');\r\n\r\n      for (let nodeEl of parentTarget.children) {\r\n        if (!nodeEl.classList.contains('jsv-fold') && !nodeEl.classList.contains('jsv-fold-end')) {\r\n          nodeEl.style.display = isClosed ? 'block' : 'none';\r\n        }\r\n      }\r\n\r\n      target.classList.toggle('jsv-fold-close');\r\n    }\r\n  }\r\n\r\n  rootElement.addEventListener('click', onToggleFold, false);\r\n\r\n  return rootElement;\r\n}\r\n"],"names":["isObj","o","constructor","name","createSpan","txt","className","span","document","createElement","textContent","classList","add","jsnview","data","displayItemsLen","displayTypes","options","rootElement","Array","isArray","ul","forEach","obj","render","li","prepend","createSpanFold","children","length","appendChild","startDelimiter","endDelimiter","key","itemsLen","spanItemsLen","innerHTML","createArr","arr","i","createListItems","parentElement","value","typeValue","Number","toString","call","match","toLowerCase","getValType","spanValue","spanValueType","parentKey","Object","entries","addEventListener","e","target","parentTarget","parentNode","nodeName","contains","isClosed","nodeEl","style","display","toggle"],"mappings":"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"}